@model D72TP1P3.Models.ViewModels.User.SignUp

@{ ViewBag.Title = "SignUp"; }

<h2 class="page-header">@D72TP1P3.Resources.Views.UserStrings.SignUp</h2>


@using (Html.BeginForm("SignUp", "Users", FormMethod.Post, new { enctype = "multipart/form-data" })) {
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.UserName,
                         new {
                             htmlAttributes = new {
                                 @class = "form-control",
                                 placeholder = Html.DescriptionFor(model => model.UserName)
                             }
                         })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.Password, new {
               htmlAttributes =
                 new {
                     @class = "form-control",
                     placeholder = Html.DescriptionFor(model => model.Password)
                 }
           })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.ConfirmPassword, new {
               htmlAttributes =
             new {
                 @class = "form-control",
                 placeholder = Html.DescriptionFor(model => model.ConfirmPassword)
             }
           })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-9">
                @Html.EditorFor(model => model.Email, new {
               htmlAttributes =
             new {
                 @class = "form-control",
                 placeholder = Html.DescriptionFor(model => model.Email)
             }
           })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IAgree, htmlAttributes: new { @class = "control-label col-sm-3" })
            <div class="col-sm-9">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IAgree)
                    @Html.ValidationMessageFor(model => model.IAgree, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-3 col-sm-9">
                <input type="submit" value="@D72TP1P3.Resources.Views.UserStrings.SignUp" class="btn btn-success" />
            </div>
        </div>
    </div>
}